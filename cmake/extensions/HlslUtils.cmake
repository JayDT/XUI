
macro(setup_hlsl source_list)
set(list_var "${ARGN}")
FOREACH( HlslFile ${list_var} )
    #message(STATUS "[HLSL Macro] Test: " ${HlslFile})
    GET_FILENAME_COMPONENT( FileNameExtension ${HlslFile} EXT ) #Extension
    if (${FileNameExtension} MATCHES "hlsl")
        GET_FILENAME_COMPONENT( FileName ${HlslFile} NAME_WE ) #Name without extension        
        string(REGEX MATCH ".*(Fragment|Vertex|Geometry).*" ShaderModel ${FileName})
        message(${LibExSTATUS} "[HLSL File] Shader Model: " ${ShaderModel} " Configuring: " ${HlslFile})
		SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_ENTRYPOINT vs_main )
        SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_TYPE Vertex )
        if (${FileName} MATCHES "(.*)Vertex(.*)")
			SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_ENTRYPOINT vs_main )
            SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_TYPE Vertex )
        elseif (${FileName} MATCHES "(.*)(Fragment|Pixel)(.*)")
			SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_ENTRYPOINT ps_main )
            SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_TYPE Pixel )
        elseif (${FileName} MATCHES "(.*)Geometry(.*)")
			SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_ENTRYPOINT gs_main )
            SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_TYPE Geometry )
        endif()
        SET_SOURCE_FILES_PROPERTIES( ${HlslFile} PROPERTIES VS_SHADER_MODEL 5.0 )
        #set_source_files_properties(${HlslFile} PROPERTIES VS_SHADER_FLAGS "/nologo")
    endif()
ENDFOREACH(HlslFile)
endmacro(setup_hlsl)